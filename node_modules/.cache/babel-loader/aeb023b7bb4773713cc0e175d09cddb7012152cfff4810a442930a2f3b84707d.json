{"ast":null,"code":"var _jsxFileName = \"E:\\\\GIT\\\\GIT_HERE\\\\react\\\\stellar-burger\\\\src\\\\components\\\\main\\\\main.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport BurgerIngredients from \"./burger-ingredients/burger-ingredients\";\nimport BurgerConstructor from \"./burger-constructor/burger-constructor\";\nimport mainStyles from \"./main.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppMain(_ref) {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [setIngredient, addIngridient] = React.useState([]);\n  const getIngridients = ingredient => {\n    addIngridient([setIngredient, ingredient]);\n  };\n  const removeIngr = index => {\n    const updatedIngr = [...setIngredient];\n    updatedIngr.splice(index, 1);\n    addIngridient(updatedIngr);\n  };\n  console.log(setIngredient);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: mainStyles.main,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text text_type_main-large\",\n      children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mainStyles.container,\n      children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        addNewIngridient: getIngridients,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        setIngredients: setIngredient,\n        removeIngr: removeIngr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n_s(AppMain, \"URF+IPD0Cc1RWTUFB9qBNxpeu94=\");\n_c = AppMain;\nexport default AppMain;\nvar _c;\n$RefreshReg$(_c, \"AppMain\");","map":{"version":3,"names":["React","BurgerIngredients","BurgerConstructor","mainStyles","jsxDEV","_jsxDEV","AppMain","_ref","_s","data","setIngredient","addIngridient","useState","getIngridients","ingredient","removeIngr","index","updatedIngr","splice","console","log","className","main","children","fileName","_jsxFileName","lineNumber","columnNumber","container","addNewIngridient","setIngredients","_c","$RefreshReg$"],"sources":["E:/GIT/GIT_HERE/react/stellar-burger/src/components/main/main.jsx"],"sourcesContent":["import React from \"react\";\r\nimport BurgerIngredients from \"./burger-ingredients/burger-ingredients\"\r\nimport BurgerConstructor from \"./burger-constructor/burger-constructor\"\r\nimport mainStyles from \"./main.module.css\"\r\n\r\nfunction AppMain({data}) {\r\n\r\n  const [setIngredient, addIngridient] = React.useState([])\r\n\r\n  const getIngridients = (ingredient) => {\r\n    addIngridient([setIngredient, ingredient]);\r\n  };\r\n  const removeIngr = (index) => {\r\n    const updatedIngr = [...setIngredient];\r\n    updatedIngr.splice(index, 1);\r\n    addIngridient(updatedIngr)\r\n  }\r\n  console.log(setIngredient)\r\n\r\nreturn(\r\n  <main className={mainStyles.main}>\r\n    <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\r\n    <div className={mainStyles.container}>\r\n        <BurgerIngredients addNewIngridient={getIngridients} data={data}/>\r\n        <BurgerConstructor setIngredients={setIngredient} removeIngr={removeIngr}/>\r\n    </div>\r\n    \r\n  </main>\r\n  )\r\n}\r\nexport default AppMain"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,yCAAyC;AACvE,OAAOC,iBAAiB,MAAM,yCAAyC;AACvE,OAAOC,UAAU,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,OAAOA,CAAAC,IAAA,EAAS;EAAAC,EAAA;EAAA,IAAR;IAACC;EAAI,CAAC,GAAAF,IAAA;EAErB,MAAM,CAACG,aAAa,EAAEC,aAAa,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAEzD,MAAMC,cAAc,GAAIC,UAAU,IAAK;IACrCH,aAAa,CAAC,CAACD,aAAa,EAAEI,UAAU,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMC,WAAW,GAAG,CAAC,GAAGP,aAAa,CAAC;IACtCO,WAAW,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC5BL,aAAa,CAACM,WAAW,CAAC;EAC5B,CAAC;EACDE,OAAO,CAACC,GAAG,CAACV,aAAa,CAAC;EAE5B,oBACEL,OAAA;IAAMgB,SAAS,EAAElB,UAAU,CAACmB,IAAK;IAAAC,QAAA,gBAC/BlB,OAAA;MAAIgB,SAAS,EAAC,2BAA2B;MAAAE,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9DtB,OAAA;MAAKgB,SAAS,EAAElB,UAAU,CAACyB,SAAU;MAAAL,QAAA,gBACjClB,OAAA,CAACJ,iBAAiB;QAAC4B,gBAAgB,EAAEhB,cAAe;QAACJ,IAAI,EAAEA;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAClEtB,OAAA,CAACH,iBAAiB;QAAC4B,cAAc,EAAEpB,aAAc;QAACK,UAAU,EAAEA;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAED;AAET;AAACnB,EAAA,CAxBQF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAyBhB,eAAeA,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}